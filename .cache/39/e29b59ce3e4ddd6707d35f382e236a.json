{"id":"ZKTl","dependencies":[{"name":"/Users/shannonnabors/Documents/projects/peter-wolf/package.json","includedInParent":true,"mtime":1598542986080},{"name":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/package.json","includedInParent":true,"mtime":1597370264538},{"name":"./_createRange","loc":{"line":1,"column":26},"parent":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/range.js","resolved":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/_createRange.js"}],"generated":{"js":"var e=require(\"./_createRange\"),r=e();module.exports=r;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/lodash/range.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/lodash/range.js","original":{"line":1,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/lodash/range.js","original":{"line":1,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/lodash/range.js","original":{"line":1,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/lodash/range.js","original":{"line":44,"column":0},"generated":{"line":1,"column":32}},{"source":"../node_modules/lodash/range.js","original":{"line":44,"column":0},"generated":{"line":1,"column":34}},{"source":"../node_modules/lodash/range.js","original":{"line":46,"column":0},"generated":{"line":1,"column":38}},{"source":"../node_modules/lodash/range.js","original":{"line":46,"column":0},"generated":{"line":1,"column":45}},{"source":"../node_modules/lodash/range.js","original":{"line":46,"column":0},"generated":{"line":1,"column":53}}],"sources":{"../node_modules/lodash/range.js":"var createRange = require('./_createRange');\n\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\nvar range = createRange();\n\nmodule.exports = range;\n"},"lineCount":null}},"error":null,"hash":"d391a2c6a862316f36ae245b557b1b0e","cacheData":{"env":{}}}