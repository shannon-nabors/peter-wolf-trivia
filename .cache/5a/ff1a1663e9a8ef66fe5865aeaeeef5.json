{"id":"L4BM","dependencies":[{"name":"/Users/shannonnabors/Documents/projects/peter-wolf/package.json","includedInParent":true,"mtime":1598542986080},{"name":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/package.json","includedInParent":true,"mtime":1597370264538},{"name":"./_createWrap","loc":{"line":1,"column":25},"parent":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/curry.js","resolved":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/_createWrap.js"}],"generated":{"js":"var e=require(\"./_createWrap\"),o=8;function r(d,i,v){var a=e(d,o,void 0,void 0,void 0,void 0,void 0,i=v?void 0:i);return a.placeholder=r.placeholder,a}r.placeholder={},module.exports=r;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/lodash/curry.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/lodash/curry.js","original":{"line":1,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/lodash/curry.js","original":{"line":1,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/lodash/curry.js","original":{"line":1,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/lodash/curry.js","original":{"line":4,"column":0},"generated":{"line":1,"column":31}},{"source":"../node_modules/lodash/curry.js","original":{"line":4,"column":0},"generated":{"line":1,"column":33}},{"source":"../node_modules/lodash/curry.js","original":{"line":47,"column":0},"generated":{"line":1,"column":35}},{"source":"../node_modules/lodash/curry.js","original":{"line":47,"column":0},"generated":{"line":1,"column":44}},{"source":"../node_modules/lodash/curry.js","original":{"line":47,"column":0},"generated":{"line":1,"column":46}},{"source":"../node_modules/lodash/curry.js","original":{"line":47,"column":0},"generated":{"line":1,"column":48}},{"source":"../node_modules/lodash/curry.js","original":{"line":47,"column":0},"generated":{"line":1,"column":50}},{"source":"../node_modules/lodash/curry.js","original":{"line":49,"column":0},"generated":{"line":1,"column":53}},{"source":"../node_modules/lodash/curry.js","original":{"line":49,"column":0},"generated":{"line":1,"column":57}},{"source":"../node_modules/lodash/curry.js","original":{"line":49,"column":0},"generated":{"line":1,"column":59}},{"source":"../node_modules/lodash/curry.js","original":{"line":49,"column":0},"generated":{"line":1,"column":61}},{"source":"../node_modules/lodash/curry.js","original":{"line":49,"column":0},"generated":{"line":1,"column":63}},{"source":"../node_modules/lodash/curry.js","original":{"line":49,"column":0},"generated":{"line":1,"column":70}},{"source":"../node_modules/lodash/curry.js","original":{"line":49,"column":0},"generated":{"line":1,"column":77}},{"source":"../node_modules/lodash/curry.js","original":{"line":49,"column":0},"generated":{"line":1,"column":84}},{"source":"../node_modules/lodash/curry.js","original":{"line":49,"column":0},"generated":{"line":1,"column":91}},{"source":"../node_modules/lodash/curry.js","original":{"line":49,"column":0},"generated":{"line":1,"column":98}},{"source":"../node_modules/lodash/curry.js","original":{"line":48,"column":0},"generated":{"line":1,"column":100}},{"source":"../node_modules/lodash/curry.js","original":{"line":48,"column":0},"generated":{"line":1,"column":102}},{"source":"../node_modules/lodash/curry.js","original":{"line":48,"column":0},"generated":{"line":1,"column":109}},{"source":"../node_modules/lodash/curry.js","original":{"line":48,"column":0},"generated":{"line":1,"column":111}},{"source":"../node_modules/lodash/curry.js","original":{"line":51,"column":0},"generated":{"line":1,"column":114}},{"source":"../node_modules/lodash/curry.js","original":{"line":50,"column":0},"generated":{"line":1,"column":121}},{"source":"../node_modules/lodash/curry.js","original":{"line":50,"column":0},"generated":{"line":1,"column":123}},{"source":"../node_modules/lodash/curry.js","original":{"line":50,"column":0},"generated":{"line":1,"column":135}},{"source":"../node_modules/lodash/curry.js","original":{"line":50,"column":0},"generated":{"line":1,"column":137}},{"source":"../node_modules/lodash/curry.js","original":{"line":51,"column":0},"generated":{"line":1,"column":149}},{"source":"../node_modules/lodash/curry.js","original":{"line":55,"column":0},"generated":{"line":1,"column":151}},{"source":"../node_modules/lodash/curry.js","original":{"line":55,"column":0},"generated":{"line":1,"column":153}},{"source":"../node_modules/lodash/curry.js","original":{"line":55,"column":0},"generated":{"line":1,"column":165}},{"source":"../node_modules/lodash/curry.js","original":{"line":57,"column":0},"generated":{"line":1,"column":168}},{"source":"../node_modules/lodash/curry.js","original":{"line":57,"column":0},"generated":{"line":1,"column":175}},{"source":"../node_modules/lodash/curry.js","original":{"line":57,"column":0},"generated":{"line":1,"column":183}}],"sources":{"../node_modules/lodash/curry.js":"var createWrap = require('./_createWrap');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_CURRY_FLAG = 8;\n\n/**\n * Creates a function that accepts arguments of `func` and either invokes\n * `func` returning its result, if at least `arity` number of arguments have\n * been provided, or returns a function that accepts the remaining `func`\n * arguments, and so on. The arity of `func` may be specified if `func.length`\n * is not sufficient.\n *\n * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n * may be used as a placeholder for provided arguments.\n *\n * **Note:** This method doesn't set the \"length\" property of curried functions.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Function\n * @param {Function} func The function to curry.\n * @param {number} [arity=func.length] The arity of `func`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Function} Returns the new curried function.\n * @example\n *\n * var abc = function(a, b, c) {\n *   return [a, b, c];\n * };\n *\n * var curried = _.curry(abc);\n *\n * curried(1)(2)(3);\n * // => [1, 2, 3]\n *\n * curried(1, 2)(3);\n * // => [1, 2, 3]\n *\n * curried(1, 2, 3);\n * // => [1, 2, 3]\n *\n * // Curried with placeholders.\n * curried(1)(_, 3)(2);\n * // => [1, 2, 3]\n */\nfunction curry(func, arity, guard) {\n  arity = guard ? undefined : arity;\n  var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n  result.placeholder = curry.placeholder;\n  return result;\n}\n\n// Assign default placeholders.\ncurry.placeholder = {};\n\nmodule.exports = curry;\n"},"lineCount":null}},"error":null,"hash":"1ee8648daa848d8be30a5b53b0e2692e","cacheData":{"env":{}}}