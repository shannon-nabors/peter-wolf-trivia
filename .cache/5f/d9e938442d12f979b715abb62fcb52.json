{"id":"aP6i","dependencies":[{"name":"/Users/shannonnabors/Documents/projects/peter-wolf/package.json","includedInParent":true,"mtime":1598542986080},{"name":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/package.json","includedInParent":true,"mtime":1597370264538},{"name":"./_createCtor","loc":{"line":1,"column":25},"parent":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/_createBind.js","resolved":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/_createCtor.js"},{"name":"./_root","loc":{"line":2,"column":19},"parent":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/_createBind.js","resolved":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/_root.js"}],"generated":{"js":"var r=require(\"./_createCtor\"),t=require(\"./_root\"),e=1;function i(i,n,o){var u=n&e,s=r(i);return function r(){return(this&&this!==t&&this instanceof r?s:i).apply(u?o:this,arguments)}}module.exports=i;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/lodash/_createBind.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":1,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":1,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":1,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":2,"column":0},"generated":{"line":1,"column":31}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":2,"column":0},"generated":{"line":1,"column":33}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":2,"column":0},"generated":{"line":1,"column":41}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":5,"column":0},"generated":{"line":1,"column":52}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":5,"column":0},"generated":{"line":1,"column":54}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":17,"column":0},"generated":{"line":1,"column":56}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":17,"column":0},"generated":{"line":1,"column":65}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":17,"column":0},"generated":{"line":1,"column":67}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":17,"column":0},"generated":{"line":1,"column":69}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":17,"column":0},"generated":{"line":1,"column":71}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":18,"column":0},"generated":{"line":1,"column":74}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":18,"column":0},"generated":{"line":1,"column":78}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":18,"column":0},"generated":{"line":1,"column":80}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":18,"column":0},"generated":{"line":1,"column":82}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":19,"column":0},"generated":{"line":1,"column":84}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":19,"column":0},"generated":{"line":1,"column":86}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":19,"column":0},"generated":{"line":1,"column":88}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":25,"column":0},"generated":{"line":1,"column":91}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":21,"column":0},"generated":{"line":1,"column":98}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":21,"column":0},"generated":{"line":1,"column":107}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":23,"column":0},"generated":{"line":1,"column":111}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":22,"column":0},"generated":{"line":1,"column":118}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":22,"column":0},"generated":{"line":1,"column":124}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":22,"column":0},"generated":{"line":1,"column":131}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":22,"column":0},"generated":{"line":1,"column":134}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":22,"column":0},"generated":{"line":1,"column":150}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":22,"column":0},"generated":{"line":1,"column":152}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":22,"column":0},"generated":{"line":1,"column":154}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":23,"column":0},"generated":{"line":1,"column":157}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":23,"column":0},"generated":{"line":1,"column":163}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":23,"column":0},"generated":{"line":1,"column":165}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":23,"column":0},"generated":{"line":1,"column":167}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":23,"column":0},"generated":{"line":1,"column":172}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":28,"column":0},"generated":{"line":1,"column":184}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":28,"column":0},"generated":{"line":1,"column":191}},{"source":"../node_modules/lodash/_createBind.js","original":{"line":28,"column":0},"generated":{"line":1,"column":199}}],"sources":{"../node_modules/lodash/_createBind.js":"var createCtor = require('./_createCtor'),\n    root = require('./_root');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1;\n\n/**\n * Creates a function that wraps `func` to invoke it with the optional `this`\n * binding of `thisArg`.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createBind(func, bitmask, thisArg) {\n  var isBind = bitmask & WRAP_BIND_FLAG,\n      Ctor = createCtor(func);\n\n  function wrapper() {\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n    return fn.apply(isBind ? thisArg : this, arguments);\n  }\n  return wrapper;\n}\n\nmodule.exports = createBind;\n"},"lineCount":null}},"error":null,"hash":"323c66057c05245569d9b198f4d27f3e","cacheData":{"env":{}}}