{"id":"qZrs","dependencies":[{"name":"/Users/shannonnabors/Documents/projects/peter-wolf/package.json","includedInParent":true,"mtime":1598542986080},{"name":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/package.json","includedInParent":true,"mtime":1597370264538},{"name":"./_baseConvert","loc":{"line":1,"column":26},"parent":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/fp/convert.js","resolved":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/fp/_baseConvert.js"},{"name":"./_util","loc":{"line":2,"column":19},"parent":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/fp/convert.js","resolved":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/fp/_util.js"}],"generated":{"js":"var e=require(\"./_baseConvert\"),r=require(\"./_util\");function u(u,t,i){return e(r,u,t,i)}module.exports=u;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/lodash/fp/convert.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/lodash/fp/convert.js","original":{"line":1,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/lodash/fp/convert.js","original":{"line":1,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/lodash/fp/convert.js","original":{"line":1,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/lodash/fp/convert.js","original":{"line":2,"column":0},"generated":{"line":1,"column":32}},{"source":"../node_modules/lodash/fp/convert.js","original":{"line":2,"column":0},"generated":{"line":1,"column":34}},{"source":"../node_modules/lodash/fp/convert.js","original":{"line":2,"column":0},"generated":{"line":1,"column":42}},{"source":"../node_modules/lodash/fp/convert.js","original":{"line":14,"column":0},"generated":{"line":1,"column":53}},{"source":"../node_modules/lodash/fp/convert.js","original":{"line":14,"column":0},"generated":{"line":1,"column":62}},{"source":"../node_modules/lodash/fp/convert.js","original":{"line":14,"column":0},"generated":{"line":1,"column":64}},{"source":"../node_modules/lodash/fp/convert.js","original":{"line":14,"column":0},"generated":{"line":1,"column":66}},{"source":"../node_modules/lodash/fp/convert.js","original":{"line":14,"column":0},"generated":{"line":1,"column":68}},{"source":"../node_modules/lodash/fp/convert.js","original":{"line":15,"column":0},"generated":{"line":1,"column":71}},{"source":"../node_modules/lodash/fp/convert.js","original":{"line":15,"column":0},"generated":{"line":1,"column":78}},{"source":"../node_modules/lodash/fp/convert.js","original":{"line":15,"column":0},"generated":{"line":1,"column":80}},{"source":"../node_modules/lodash/fp/convert.js","original":{"line":15,"column":0},"generated":{"line":1,"column":82}},{"source":"../node_modules/lodash/fp/convert.js","original":{"line":15,"column":0},"generated":{"line":1,"column":84}},{"source":"../node_modules/lodash/fp/convert.js","original":{"line":15,"column":0},"generated":{"line":1,"column":86}},{"source":"../node_modules/lodash/fp/convert.js","original":{"line":18,"column":0},"generated":{"line":1,"column":89}},{"source":"../node_modules/lodash/fp/convert.js","original":{"line":18,"column":0},"generated":{"line":1,"column":96}},{"source":"../node_modules/lodash/fp/convert.js","original":{"line":18,"column":0},"generated":{"line":1,"column":104}}],"sources":{"../node_modules/lodash/fp/convert.js":"var baseConvert = require('./_baseConvert'),\n    util = require('./_util');\n\n/**\n * Converts `func` of `name` to an immutable auto-curried iteratee-first data-last\n * version with conversion `options` applied. If `name` is an object its methods\n * will be converted.\n *\n * @param {string} name The name of the function to wrap.\n * @param {Function} [func] The function to wrap.\n * @param {Object} [options] The options object. See `baseConvert` for more details.\n * @returns {Function|Object} Returns the converted function or object.\n */\nfunction convert(name, func, options) {\n  return baseConvert(util, name, func, options);\n}\n\nmodule.exports = convert;\n"},"lineCount":null}},"error":null,"hash":"5ef7872428e7e706cc34ebf9973d5bc0","cacheData":{"env":{}}}