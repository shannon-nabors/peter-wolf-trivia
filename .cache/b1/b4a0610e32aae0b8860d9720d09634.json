{"id":"HmkM","dependencies":[{"name":"/Users/shannonnabors/Documents/projects/peter-wolf/package.json","includedInParent":true,"mtime":1598542986080},{"name":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/regexp.prototype.flags/package.json","includedInParent":true,"mtime":1597370264538}],"generated":{"js":"\"use strict\";var t=Object,i=TypeError;module.exports=function(){if(null!=this&&this!==t(this))throw new i(\"RegExp.prototype.flags getter called on non-object\");var e=\"\";return this.global&&(e+=\"g\"),this.ignoreCase&&(e+=\"i\"),this.multiline&&(e+=\"m\"),this.dotAll&&(e+=\"s\"),this.unicode&&(e+=\"u\"),this.sticky&&(e+=\"y\"),e};"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/regexp.prototype.flags/implementation.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","original":{"line":3,"column":0},"generated":{"line":1,"column":13}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","name":"$Object","original":{"line":3,"column":4},"generated":{"line":1,"column":17}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","name":"Object","original":{"line":3,"column":14},"generated":{"line":1,"column":19}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","name":"$TypeError","original":{"line":4,"column":4},"generated":{"line":1,"column":26}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","name":"TypeError","original":{"line":4,"column":17},"generated":{"line":1,"column":28}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","name":"module","original":{"line":6,"column":0},"generated":{"line":1,"column":38}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","name":"exports","original":{"line":6,"column":7},"generated":{"line":1,"column":45}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","original":{"line":6,"column":17},"generated":{"line":1,"column":53}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","original":{"line":7,"column":5},"generated":{"line":1,"column":64}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","original":{"line":7,"column":13},"generated":{"line":1,"column":67}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","original":{"line":7,"column":5},"generated":{"line":1,"column":73}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","original":{"line":7,"column":21},"generated":{"line":1,"column":79}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","name":"$Object","original":{"line":7,"column":30},"generated":{"line":1,"column":86}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","original":{"line":7,"column":38},"generated":{"line":1,"column":88}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","original":{"line":8,"column":8},"generated":{"line":1,"column":94}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","original":{"line":8,"column":8},"generated":{"line":1,"column":100}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","name":"$TypeError","original":{"line":8,"column":12},"generated":{"line":1,"column":104}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","original":{"line":8,"column":23},"generated":{"line":1,"column":106}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","name":"result","original":{"line":10,"column":5},"generated":{"line":1,"column":160}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","name":"result","original":{"line":10,"column":5},"generated":{"line":1,"column":164}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","original":{"line":10,"column":14},"generated":{"line":1,"column":166}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","name":"result","original":{"line":29,"column":8},"generated":{"line":1,"column":169}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","original":{"line":11,"column":5},"generated":{"line":1,"column":176}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","name":"global","original":{"line":11,"column":10},"generated":{"line":1,"column":181}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","name":"result","original":{"line":12,"column":2},"generated":{"line":1,"column":190}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","original":{"line":12,"column":12},"generated":{"line":1,"column":193}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","original":{"line":14,"column":5},"generated":{"line":1,"column":198}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","name":"ignoreCase","original":{"line":14,"column":10},"generated":{"line":1,"column":203}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","name":"result","original":{"line":15,"column":2},"generated":{"line":1,"column":216}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","original":{"line":15,"column":12},"generated":{"line":1,"column":219}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","original":{"line":17,"column":5},"generated":{"line":1,"column":224}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","name":"multiline","original":{"line":17,"column":10},"generated":{"line":1,"column":229}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","name":"result","original":{"line":18,"column":2},"generated":{"line":1,"column":241}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","original":{"line":18,"column":12},"generated":{"line":1,"column":244}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","original":{"line":20,"column":5},"generated":{"line":1,"column":249}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","name":"dotAll","original":{"line":20,"column":10},"generated":{"line":1,"column":254}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","name":"result","original":{"line":21,"column":2},"generated":{"line":1,"column":263}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","original":{"line":21,"column":12},"generated":{"line":1,"column":266}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","original":{"line":23,"column":5},"generated":{"line":1,"column":271}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","name":"unicode","original":{"line":23,"column":10},"generated":{"line":1,"column":276}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","name":"result","original":{"line":24,"column":2},"generated":{"line":1,"column":286}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","original":{"line":24,"column":12},"generated":{"line":1,"column":289}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","original":{"line":26,"column":5},"generated":{"line":1,"column":294}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","name":"sticky","original":{"line":26,"column":10},"generated":{"line":1,"column":299}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","name":"result","original":{"line":27,"column":2},"generated":{"line":1,"column":308}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","original":{"line":27,"column":12},"generated":{"line":1,"column":311}},{"source":"../node_modules/regexp.prototype.flags/implementation.js","name":"result","original":{"line":29,"column":8},"generated":{"line":1,"column":316}}],"sources":{"../node_modules/regexp.prototype.flags/implementation.js":"'use strict';\n\nvar $Object = Object;\nvar $TypeError = TypeError;\n\nmodule.exports = function flags() {\n\tif (this != null && this !== $Object(this)) {\n\t\tthrow new $TypeError('RegExp.prototype.flags getter called on non-object');\n\t}\n\tvar result = '';\n\tif (this.global) {\n\t\tresult += 'g';\n\t}\n\tif (this.ignoreCase) {\n\t\tresult += 'i';\n\t}\n\tif (this.multiline) {\n\t\tresult += 'm';\n\t}\n\tif (this.dotAll) {\n\t\tresult += 's';\n\t}\n\tif (this.unicode) {\n\t\tresult += 'u';\n\t}\n\tif (this.sticky) {\n\t\tresult += 'y';\n\t}\n\treturn result;\n};\n"},"lineCount":null}},"error":null,"hash":"663ce0e549deb8713517901caf4ffd44","cacheData":{"env":{}}}