{"id":"cZ0f","dependencies":[{"name":"/Users/shannonnabors/Documents/projects/peter-wolf/package.json","includedInParent":true,"mtime":1598542986080},{"name":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/package.json","includedInParent":true,"mtime":1597370264538},{"name":"./_createCompounder","loc":{"line":1,"column":31},"parent":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/startCase.js","resolved":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/_createCompounder.js"},{"name":"./upperFirst","loc":{"line":2,"column":25},"parent":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/startCase.js","resolved":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/upperFirst.js"}],"generated":{"js":"var r=require(\"./_createCompounder\"),e=require(\"./upperFirst\"),u=r(function(r,u,o){return r+(o?\" \":\"\")+e(u)});module.exports=u;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/lodash/startCase.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/lodash/startCase.js","original":{"line":1,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/lodash/startCase.js","original":{"line":1,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/lodash/startCase.js","original":{"line":1,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/lodash/startCase.js","original":{"line":2,"column":0},"generated":{"line":1,"column":37}},{"source":"../node_modules/lodash/startCase.js","original":{"line":2,"column":0},"generated":{"line":1,"column":39}},{"source":"../node_modules/lodash/startCase.js","original":{"line":2,"column":0},"generated":{"line":1,"column":47}},{"source":"../node_modules/lodash/startCase.js","original":{"line":25,"column":0},"generated":{"line":1,"column":63}},{"source":"../node_modules/lodash/startCase.js","original":{"line":25,"column":0},"generated":{"line":1,"column":65}},{"source":"../node_modules/lodash/startCase.js","original":{"line":25,"column":0},"generated":{"line":1,"column":67}},{"source":"../node_modules/lodash/startCase.js","original":{"line":25,"column":0},"generated":{"line":1,"column":76}},{"source":"../node_modules/lodash/startCase.js","original":{"line":25,"column":0},"generated":{"line":1,"column":78}},{"source":"../node_modules/lodash/startCase.js","original":{"line":25,"column":0},"generated":{"line":1,"column":80}},{"source":"../node_modules/lodash/startCase.js","original":{"line":26,"column":0},"generated":{"line":1,"column":83}},{"source":"../node_modules/lodash/startCase.js","original":{"line":26,"column":0},"generated":{"line":1,"column":90}},{"source":"../node_modules/lodash/startCase.js","original":{"line":26,"column":0},"generated":{"line":1,"column":93}},{"source":"../node_modules/lodash/startCase.js","original":{"line":26,"column":0},"generated":{"line":1,"column":95}},{"source":"../node_modules/lodash/startCase.js","original":{"line":26,"column":0},"generated":{"line":1,"column":99}},{"source":"../node_modules/lodash/startCase.js","original":{"line":26,"column":0},"generated":{"line":1,"column":103}},{"source":"../node_modules/lodash/startCase.js","original":{"line":26,"column":0},"generated":{"line":1,"column":105}},{"source":"../node_modules/lodash/startCase.js","original":{"line":29,"column":0},"generated":{"line":1,"column":110}},{"source":"../node_modules/lodash/startCase.js","original":{"line":29,"column":0},"generated":{"line":1,"column":117}},{"source":"../node_modules/lodash/startCase.js","original":{"line":29,"column":0},"generated":{"line":1,"column":125}}],"sources":{"../node_modules/lodash/startCase.js":"var createCompounder = require('./_createCompounder'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts `string` to\n * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n *\n * @static\n * @memberOf _\n * @since 3.1.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the start cased string.\n * @example\n *\n * _.startCase('--foo-bar--');\n * // => 'Foo Bar'\n *\n * _.startCase('fooBar');\n * // => 'Foo Bar'\n *\n * _.startCase('__FOO_BAR__');\n * // => 'FOO BAR'\n */\nvar startCase = createCompounder(function(result, word, index) {\n  return result + (index ? ' ' : '') + upperFirst(word);\n});\n\nmodule.exports = startCase;\n"},"lineCount":null}},"error":null,"hash":"fd38866c10aefcb690db257354003941","cacheData":{"env":{}}}