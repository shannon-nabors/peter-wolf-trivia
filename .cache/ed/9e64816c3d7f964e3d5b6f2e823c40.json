{"id":"xe3X","dependencies":[{"name":"/Users/shannonnabors/Documents/projects/peter-wolf/package.json","includedInParent":true,"mtime":1598542986080},{"name":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/package.json","includedInParent":true,"mtime":1597370264538},{"name":"./_LazyWrapper","loc":{"line":1,"column":26},"parent":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/wrapperLodash.js","resolved":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/_LazyWrapper.js"},{"name":"./_LodashWrapper","loc":{"line":2,"column":28},"parent":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/wrapperLodash.js","resolved":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/_LodashWrapper.js"},{"name":"./_baseLodash","loc":{"line":3,"column":25},"parent":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/wrapperLodash.js","resolved":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/_baseLodash.js"},{"name":"./isArray","loc":{"line":4,"column":22},"parent":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/wrapperLodash.js","resolved":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/isArray.js"},{"name":"./isObjectLike","loc":{"line":5,"column":27},"parent":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/wrapperLodash.js","resolved":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/isObjectLike.js"},{"name":"./_wrapperClone","loc":{"line":6,"column":27},"parent":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/wrapperLodash.js","resolved":"/Users/shannonnabors/Documents/projects/peter-wolf/node_modules/lodash/_wrapperClone.js"}],"generated":{"js":"var r=require(\"./_LazyWrapper\"),e=require(\"./_LodashWrapper\"),t=require(\"./_baseLodash\"),o=require(\"./isArray\"),p=require(\"./isObjectLike\"),i=require(\"./_wrapperClone\"),a=Object.prototype,n=a.hasOwnProperty;function u(t){if(p(t)&&!o(t)&&!(t instanceof r)){if(t instanceof e)return t;if(n.call(t,\"__wrapped__\"))return i(t)}return new e(t)}u.prototype=t.prototype,u.prototype.constructor=u,module.exports=u;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":1,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":1,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":1,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":2,"column":0},"generated":{"line":1,"column":32}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":2,"column":0},"generated":{"line":1,"column":34}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":2,"column":0},"generated":{"line":1,"column":42}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":3,"column":0},"generated":{"line":1,"column":62}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":3,"column":0},"generated":{"line":1,"column":64}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":3,"column":0},"generated":{"line":1,"column":72}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":4,"column":0},"generated":{"line":1,"column":89}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":4,"column":0},"generated":{"line":1,"column":91}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":4,"column":0},"generated":{"line":1,"column":99}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":5,"column":0},"generated":{"line":1,"column":112}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":5,"column":0},"generated":{"line":1,"column":114}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":5,"column":0},"generated":{"line":1,"column":122}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":6,"column":0},"generated":{"line":1,"column":140}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":6,"column":0},"generated":{"line":1,"column":142}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":6,"column":0},"generated":{"line":1,"column":150}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":9,"column":0},"generated":{"line":1,"column":169}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":9,"column":0},"generated":{"line":1,"column":171}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":9,"column":0},"generated":{"line":1,"column":178}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":12,"column":0},"generated":{"line":1,"column":188}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":12,"column":0},"generated":{"line":1,"column":190}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":12,"column":0},"generated":{"line":1,"column":192}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":131,"column":0},"generated":{"line":1,"column":207}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":131,"column":0},"generated":{"line":1,"column":216}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":131,"column":0},"generated":{"line":1,"column":218}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":132,"column":0},"generated":{"line":1,"column":221}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":132,"column":0},"generated":{"line":1,"column":224}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":132,"column":0},"generated":{"line":1,"column":226}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":132,"column":0},"generated":{"line":1,"column":231}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":132,"column":0},"generated":{"line":1,"column":233}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":132,"column":0},"generated":{"line":1,"column":239}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":132,"column":0},"generated":{"line":1,"column":252}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":132,"column":0},"generated":{"line":1,"column":255}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":133,"column":0},"generated":{"line":1,"column":256}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":133,"column":0},"generated":{"line":1,"column":259}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":133,"column":0},"generated":{"line":1,"column":272}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":134,"column":0},"generated":{"line":1,"column":274}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":134,"column":0},"generated":{"line":1,"column":281}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":136,"column":0},"generated":{"line":1,"column":283}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":136,"column":0},"generated":{"line":1,"column":286}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":136,"column":0},"generated":{"line":1,"column":288}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":136,"column":0},"generated":{"line":1,"column":293}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":136,"column":0},"generated":{"line":1,"column":295}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":137,"column":0},"generated":{"line":1,"column":310}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":137,"column":0},"generated":{"line":1,"column":317}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":137,"column":0},"generated":{"line":1,"column":319}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":140,"column":0},"generated":{"line":1,"column":322}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":140,"column":0},"generated":{"line":1,"column":329}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":140,"column":0},"generated":{"line":1,"column":333}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":140,"column":0},"generated":{"line":1,"column":335}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":144,"column":0},"generated":{"line":1,"column":338}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":144,"column":0},"generated":{"line":1,"column":340}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":144,"column":0},"generated":{"line":1,"column":350}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":144,"column":0},"generated":{"line":1,"column":352}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":145,"column":0},"generated":{"line":1,"column":362}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":145,"column":0},"generated":{"line":1,"column":364}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":145,"column":0},"generated":{"line":1,"column":374}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":145,"column":0},"generated":{"line":1,"column":386}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":147,"column":0},"generated":{"line":1,"column":388}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":147,"column":0},"generated":{"line":1,"column":395}},{"source":"../node_modules/lodash/wrapperLodash.js","original":{"line":147,"column":0},"generated":{"line":1,"column":403}}],"sources":{"../node_modules/lodash/wrapperLodash.js":"var LazyWrapper = require('./_LazyWrapper'),\n    LodashWrapper = require('./_LodashWrapper'),\n    baseLodash = require('./_baseLodash'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike'),\n    wrapperClone = require('./_wrapperClone');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates a `lodash` object which wraps `value` to enable implicit method\n * chain sequences. Methods that operate on and return arrays, collections,\n * and functions can be chained together. Methods that retrieve a single value\n * or may return a primitive value will automatically end the chain sequence\n * and return the unwrapped value. Otherwise, the value must be unwrapped\n * with `_#value`.\n *\n * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n * enabled using `_.chain`.\n *\n * The execution of chained methods is lazy, that is, it's deferred until\n * `_#value` is implicitly or explicitly called.\n *\n * Lazy evaluation allows several methods to support shortcut fusion.\n * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n * the creation of intermediate arrays and can greatly reduce the number of\n * iteratee executions. Sections of a chain sequence qualify for shortcut\n * fusion if the section is applied to an array and iteratees accept only\n * one argument. The heuristic for whether a section qualifies for shortcut\n * fusion is subject to change.\n *\n * Chaining is supported in custom builds as long as the `_#value` method is\n * directly or indirectly included in the build.\n *\n * In addition to lodash methods, wrappers have `Array` and `String` methods.\n *\n * The wrapper `Array` methods are:\n * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n *\n * The wrapper `String` methods are:\n * `replace` and `split`\n *\n * The wrapper methods that support shortcut fusion are:\n * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n *\n * The chainable wrapper methods are:\n * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n * `zipObject`, `zipObjectDeep`, and `zipWith`\n *\n * The wrapper methods that are **not** chainable by default are:\n * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n * `upperFirst`, `value`, and `words`\n *\n * @name _\n * @constructor\n * @category Seq\n * @param {*} value The value to wrap in a `lodash` instance.\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var wrapped = _([1, 2, 3]);\n *\n * // Returns an unwrapped value.\n * wrapped.reduce(_.add);\n * // => 6\n *\n * // Returns a wrapped value.\n * var squares = wrapped.map(square);\n *\n * _.isArray(squares);\n * // => false\n *\n * _.isArray(squares.value());\n * // => true\n */\nfunction lodash(value) {\n  if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n    if (value instanceof LodashWrapper) {\n      return value;\n    }\n    if (hasOwnProperty.call(value, '__wrapped__')) {\n      return wrapperClone(value);\n    }\n  }\n  return new LodashWrapper(value);\n}\n\n// Ensure wrappers are instances of `baseLodash`.\nlodash.prototype = baseLodash.prototype;\nlodash.prototype.constructor = lodash;\n\nmodule.exports = lodash;\n"},"lineCount":null}},"error":null,"hash":"12d4ad9a68d156b763aafaf78db73da5","cacheData":{"env":{}}}